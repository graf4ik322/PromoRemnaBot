version: '3.7'

services:
  remnawave-bot:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: promo-remna-bot-prod
    restart: always
    
    # Environment variables
    env_file:
      - .env
    environment:
      - LOG_LEVEL=INFO
    
    # Volumes for persistent data
    volumes:
      - ./subscription_files:/app/subscription_files
      - ./logs:/app/logs
    
    # Network settings
    networks:
      - remnawave-network
    
    # Resource limits (production settings)
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.2'
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 5
        window: 300s
    
    # Health check
    healthcheck:
      test: ["CMD", "python3", "-c", "import requests; requests.get('https://api.telegram.org', timeout=5)"]
      interval: 60s
      timeout: 15s
      retries: 5
      start_period: 60s
    
    # Logging configuration (production)
    logging:
      driver: "json-file"
      options:
        max-size: "50m"
        max-file: "5"
        compress: "true"
    
    # Security settings
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp
    
    # Additional labels for monitoring
    labels:
      - "com.remnawave.service=telegram-bot"
      - "com.remnawave.environment=production"

  # Optional: Add watchtower for automatic updates
  watchtower:
    image: containrrr/watchtower
    container_name: remnawave-bot-watchtower
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=86400  # Check daily
      - WATCHTOWER_INCLUDE_STOPPED=true
          command: promo-remna-bot-prod
    networks:
      - remnawave-network

networks:
  remnawave-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16