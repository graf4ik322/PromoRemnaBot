#!/usr/bin/env python3
"""
Test script to verify inbound UUIDs configuration
"""

import os
from config import Config

def test_inbound_configuration():
    """Test inbound configuration"""
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–ò –ò–ù–ë–ê–£–ù–î–û–í")
    print("=" * 50)
    
    # Check current configuration
    current_inbounds = Config.DEFAULT_INBOUND_IDS
    print(f"üìã DEFAULT_INBOUND_IDS –∏–∑ config: {current_inbounds}")
    print(f"üìù –¢–∏–ø: {type(current_inbounds)}")
    print(f"üî¢ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {len(current_inbounds)}")
    
    # Check environment variable
    env_value = os.getenv('DEFAULT_INBOUND_IDS', '1')
    print(f"\nüåç –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è DEFAULT_INBOUND_IDS: '{env_value}'")
    
    # Show what would be sent to API
    print(f"\nüì§ –ß—Ç–æ –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ API:")
    print(f"   active_user_inbounds={current_inbounds}")
    
    # Check if these look like UUIDs or numeric IDs
    print(f"\nüîç –ê–Ω–∞–ª–∏–∑ –∏–Ω–±–∞—É–Ω–¥–æ–≤:")
    for i, inbound in enumerate(current_inbounds):
        if isinstance(inbound, str) and len(inbound) >= 36:
            print(f"   {i+1}. '{inbound}' - –≤—ã–≥–ª—è–¥–∏—Ç –∫–∞–∫ UUID ‚úÖ")
        elif isinstance(inbound, int):
            print(f"   {i+1}. {inbound} - —á–∏—Å–ª–æ–≤–æ–π ID ‚ö†Ô∏è")
        else:
            print(f"   {i+1}. '{inbound}' - –Ω–µ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ‚ùì")
    
    return current_inbounds

def show_before_after():
    """Show before/after comparison"""
    print("\n" + "=" * 50)
    print("üìä –°–†–ê–í–ù–ï–ù–ò–ï –î–û/–ü–û–°–õ–ï")
    print("=" * 50)
    
    print("‚ùå –ë–´–õ–û:")
    print("   activate_all_inbounds=True")
    print("   ‚Ü≥ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–ª–∏—Å—å –í–°–ï –∏–Ω–±–∞—É–Ω–¥—ã –≤ —Å–∏—Å—Ç–µ–º–µ")
    
    print(f"\n‚úÖ –°–¢–ê–õ–û:")
    print(f"   active_user_inbounds={Config.DEFAULT_INBOUND_IDS}")
    print("   ‚Ü≥ –ê–∫—Ç–∏–≤–∏—Ä—É—é—Ç—Å—è –¢–û–õ–¨–ö–û —É–∫–∞–∑–∞–Ω–Ω—ã–µ –≤ .env –∏–Ω–±–∞—É–Ω–¥—ã")
    
    print(f"\nüéØ –ü–†–ï–ò–ú–£–©–ï–°–¢–í–ê:")
    print("   - –ö–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º–∏ –∏–Ω–±–∞—É–Ω–¥–∞–º–∏")
    print("   - –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å (–Ω–µ –≤—Å–µ –∏–Ω–±–∞—É–Ω–¥—ã)")
    print("   - –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º–æ—Å—Ç—å —á–µ—Ä–µ–∑ .env")

def show_env_examples():
    """Show environment variable examples"""
    print("\n" + "=" * 50)
    print("üìù –ü–†–ò–ú–ï–†–´ –ù–ê–°–¢–†–û–ô–ö–ò .env")
    print("=" * 50)
    
    examples = [
        ("–û–¥–∏–Ω UUID", "DEFAULT_INBOUND_IDS=123e4567-e89b-12d3-a456-426614174000"),
        ("–ù–µ—Å–∫–æ–ª—å–∫–æ UUID", "DEFAULT_INBOUND_IDS=123e4567-e89b-12d3-a456-426614174000,987fcdeb-a123-45e6-f789-012345678901"),
        ("–°–º–µ—à–∞–Ω–Ω—ã–µ ID", "DEFAULT_INBOUND_IDS=1,123e4567-e89b-12d3-a456-426614174000,2"),
        ("–¢–æ–ª—å–∫–æ —á–∏—Å–ª–æ–≤—ã–µ", "DEFAULT_INBOUND_IDS=1,2,3")
    ]
    
    for name, example in examples:
        print(f"\nüîß {name}:")
        print(f"   {example}")

if __name__ == "__main__":
    inbounds = test_inbound_configuration()
    show_before_after()
    show_env_examples()
    
    print("\n" + "üéØ" * 25)
    print("–†–ï–ó–£–õ–¨–¢–ê–¢:")
    print("‚úÖ –ò–ù–ë–ê–£–ù–î–´: –¢–µ–ø–µ—Ä—å –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –∏–∑ .env")
    print(f"üìã –¢–ï–ö–£–©–ò–ï: {inbounds}")
    print("üîß –ù–ê–°–¢–†–û–ô–ö–ê: –ß–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é DEFAULT_INBOUND_IDS")
    print("üéØ" * 25)